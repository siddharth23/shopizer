pipeline {

    agent any

    options {
        skipDefaultCheckout()
    }

    tools {
        maven 'maven'

    }

    environment {

        DOCKER_HOME = '/Applications/Docker.app/Contents/Resources/bin'
    }

    stages {

        stage ('checkout'){

            steps{
                checkout([$class: 'GitSCM', branches: [[name: '2.2.0']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'siddharth23', url: 'https://github.com/siddharth23/shopizer.git']]]);
            }
        }
        stage('Compile') {
            steps {

                sh 'mvn clean compile'
            }

        }
        stage('Run Unit Tests') {

            steps {
                sh 'mvn clean test'
            }
            post {
                success {
                    echo 'All Tests passes successfully!!'
                }
            }
        }

        stage('Build Artifacts') {

            steps {
                sh 'mvn clean package -DskipTests'

            }
            post {
                success {
                    echo 'Now Archiving ..'
                    archiveArtifacts artifacts: 'sm-shop/target/shop.war, dockerFile'
                }
            }
        }

        stage('Build Image') {

            steps {

                echo 'Building Image ..'
                sh ' $DOCKER_HOME/docker build -t shop:$BUILD_ID sm-shop/. '

            }
        }

        stage('Deploy Image') {

            steps {

                echo 'Deploying Image ..'
                sh '$DOCKER_HOME/docker container rm -f shop || true'
                sh 'BUILD_ID=dontKillMe $DOCKER_HOME/docker container run -d -p 9092:8080 --name=shop shop:$BUILD_ID '

            }
            post {
                success {

                    build job: 'shopizer-functional-tests', wait: false

                }
            }
        }
    }

}
